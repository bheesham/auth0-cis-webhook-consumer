AWSTemplateFormatVersion: 2010-09-09
Description: Auth0 CIS WebHook Consumer Lambda function and API Gateway
Metadata:
  Source: https://github.com/mozilla-iam/auth0-cis-webhook-consumer/auth0-cis-webhook-consumer.yaml
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: API
      Parameters:
      - CustomDomainName
      - DomainNameZone
      - CertificateArn
    - Label:
        default: Configuration
    ParameterLabels:
      CustomDomainName:
        default: Custom DNS Domain Name
      DomainNameZone:
        default: DNS Zone containing the Custom DNS Domain Name
      CertificateArn:
        default: AWS ACM Certificate ARN for the Custom DNS Domain Name
      EnvironmentName:
        default: The name of the environment which is used in AWS SSM Parameter Store paths
      DiscoveryUrl:
        default: The discovery URL for the environment
      NotificationAudience:
        default: The expected audience of the token
      ClientId:
        default: The Auth0 Client ID to use to query the Person API
Parameters:
  CustomDomainName:
    Type: String
    Description: The custom domain name to use for the API
    Default: ''
  DomainNameZone:
    Type: String
    Description: The Route53 DNS zone containing the custom domain name
    Default: ''
  CertificateArn:
    Type: String
    Description: The ARN of the AWS ACM Certificate for your custom domain name
    Default: ''
  EnvironmentName:
    Type: String
    Description: The name of the environment which is used in AWS SSM Parameter Store paths
  DiscoveryUrl:
    Type: String
    Description: The discovery URL for the environment
  NotificationAudience:
    Type: String
    Description: The expected audience of the token
  ClientId:
    Type: String
    Description: The Auth0 Client ID to use to query the Person API
Conditions:
  UseCustomDomainName: !Not [ !Equals [ !Ref 'CustomDomainName', '' ] ]
Rules:
  DomainNameAndCertificateArnProvided:
    RuleCondition: !Or [ !Not [ !Equals [ !Ref 'CustomDomainName', '' ] ], !Not [ !Equals [ !Ref 'DomainNameZone', '' ] ], !Not [ !Equals [ !Ref 'CertificateArn', '' ] ] ]
    Assertions:
      - Assert: !And [ !Not [ !Equals [ !Ref 'CustomDomainName', '' ] ], !Not [ !Equals [ !Ref 'DomainNameZone', '' ] ], !Not [ !Equals [ !Ref 'CertificateArn', '' ] ] ]
        AssertDescription: If you set a CustomDomainName, DomainNameZone or CertificateArn you must provide all values
Resources:
  Auth0CISWebHookConsumerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: AllowLambdaLogging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
        - PolicyName: GetSSMParameters
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParametersByPath
                Resource: !Join [ '', [ 'arn:aws:ssm:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':parameter/iam/cis/', !Ref EnvironmentName, '/auth0_cis_webhook_consumer' ] ]
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                Resource: !Join [ '', [ 'arn:aws:ssm:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':parameter/iam/cis/', !Ref EnvironmentName, '/auth0_cis_webhook_consumer/*' ] ]
  Auth0CISWebHookConsumerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Auth0 CIS WebHook Consumer
      Code: build/
      Environment:
        Variables:
          LOG_LEVEL: DEBUG
          DOMAIN_NAME: !Ref CustomDomainName  # What if a domain name isn't provided?
          ENVIRONMENT_NAME: !Ref EnvironmentName
          DISCOVERY_URL: !Ref DiscoveryUrl
          NOTIFICATION_AUDIENCE: !Ref NotificationAudience
          CLIENT_ID: !Ref ClientId
      Handler: auth0_cis_webhook_consumer.app.lambda_handler
      Runtime: python3.8
      Role: !GetAtt Auth0CISWebHookConsumerFunctionRole.Arn
      Tags:
        - Key: application
          Value: auth0-cis-webhook-consumer
        - Key: stack
          Value: !Ref AWS::StackName
        - Key: source
          Value: https://github.com/mozilla-iam/auth0-cis-webhook-consumer/
      Timeout: 900
  Auth0CISWebHookConsumerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      # Let's hope that the Lambda function doesn't execute before this LogGroup
      # resource is created, creating the LogGroup with no expiration and
      # preventing this resource from creating
      LogGroupName: !Join [ '/', ['/aws/lambda', !Ref 'Auth0CISWebHookConsumerFunction' ] ]
      RetentionInDays: 14
  Auth0CISWebHookConsumerDomainName:
    Type: AWS::ApiGateway::DomainName
    Condition: UseCustomDomainName
    Properties:
      RegionalCertificateArn: !Ref CertificateArn
      DomainName: !Ref CustomDomainName
      EndpointConfiguration:
        Types:
          - REGIONAL
  Auth0CISWebHookConsumerRoute53RecordSet:
    Type: AWS::Route53::RecordSet
    Condition: UseCustomDomainName
    Properties:
      AliasTarget:
        DNSName: !GetAtt Auth0CISWebHookConsumerDomainName.RegionalDomainName
        HostedZoneId: !GetAtt Auth0CISWebHookConsumerDomainName.RegionalHostedZoneId
      Comment: Bind the custom domain name to the Auth0CISWebHookConsumer API Gateway
      HostedZoneName: !Ref DomainNameZone
      Name: !Ref CustomDomainName
      Type: A
  Auth0CISWebHookConsumerApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Auth0CISWebHookConsumer
      Description: MozDef Slack Triage Bot API
      FailOnWarnings: true
      EndpointConfiguration:
        Types:
          - REGIONAL
  Auth0CISWebHookConsumerBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: UseCustomDomainName
    Properties:
      DomainName: !Ref Auth0CISWebHookConsumerDomainName
      RestApiId: !Ref Auth0CISWebHookConsumerApi
      Stage: !Ref Auth0CISWebHookConsumerApiStage
  Auth0CISWebHookConsumerLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt Auth0CISWebHookConsumerFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [ '', [ 'arn:aws:execute-api:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref 'Auth0CISWebHookConsumerApi', '/*/*' ] ]
  Auth0CISWebHookConsumerApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref Auth0CISWebHookConsumerApiDeployment
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: ERROR
          ResourcePath: /*
      RestApiId: !Ref Auth0CISWebHookConsumerApi
      Tags:
        - Key: application
          Value: auth0-cis-webhook-consumer
        - Key: stack
          Value: !Ref AWS::StackName
        - Key: source
          Value: https://github.com/mozilla-iam/auth0-cis-webhook-consumer/
      # Description: x
      # StageName: LATEST
  Auth0CISWebHookConsumerApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - Auth0CISWebHookConsumerRequest
    Properties:
      RestApiId: !Ref Auth0CISWebHookConsumerApi
      StageName: DummyStage
      # Note This property is required by API Gateway. We recommend that you
      # specify a name using any value (see Examples) and that you don’t use
      # this stage. We recommend not using this stage because it is tied to
      # this deployment, which means you can’t delete one without deleting the
      # other. For example, if you delete this deployment, API Gateway also
      # deletes this stage, which you might want to keep. Instead, use the
      # AWS::ApiGateway::Stage resource to create and associate a stage with
      # this deployment.
  Auth0CISWebHookConsumerResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref Auth0CISWebHookConsumerApi
      ParentId: !GetAtt Auth0CISWebHookConsumerApi.RootResourceId
      PathPart: '{proxy+}'
  Auth0CISWebHookConsumerRequest:
    DependsOn: Auth0CISWebHookConsumerLambdaPermission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        # https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#set-up-lambda-proxy-integration-using-cli
        # "For Lambda integrations, you must use the HTTP method of POST for the
        # integration request, according to the specification of the Lambda service
        # action for function invocations."
        IntegrationHttpMethod: POST
        Uri: !Join [ '', [ 'arn:aws:apigateway:', !Ref 'AWS::Region', ':lambda:path/2015-03-31/functions/', !GetAtt 'Auth0CISWebHookConsumerFunction.Arn', '/invocations' ] ]
      ResourceId: !Ref Auth0CISWebHookConsumerResource
      RestApiId: !Ref Auth0CISWebHookConsumerApi
  Auth0CISWebHookConsumerPOSTRequest:
    DependsOn: Auth0CISWebHookConsumerLambdaPermission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        # https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#set-up-lambda-proxy-integration-using-cli
        # "For Lambda integrations, you must use the HTTP method of POST for the
        # integration request, according to the specification of the Lambda service
        # action for function invocations."
        IntegrationHttpMethod: POST
        Uri: !Join [ '', [ 'arn:aws:apigateway:', !Ref 'AWS::Region', ':lambda:path/2015-03-31/functions/', !GetAtt 'Auth0CISWebHookConsumerFunction.Arn', '/invocations' ] ]
      ResourceId: !Ref Auth0CISWebHookConsumerResource
      RestApiId: !Ref Auth0CISWebHookConsumerApi
Outputs:
  Auth0CISWebHookConsumerUrl:
    Description: The URL of the API
    Value:
      Fn::If:
        - UseCustomDomainName
        - !Join [ '', [ 'https://', !Ref 'CustomDomainName', '/'] ]
        - !Join [ '', [ 'https://', !Ref 'Auth0CISWebHookConsumerApi', '.execute-api.', !Ref 'AWS::Region', '.amazonaws.com/', !Ref 'Auth0CISWebHookConsumerApiStage', '/' ] ]
  Auth0CISWebHookConsumerFunctionName:
    Description: The AWS Lambda function name
    Value: !Ref Auth0CISWebHookConsumerFunction
